{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../App.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { onMount } from \"svelte\"; // onMount life cycle method\n  import Navbar from \"./layouts/Navbar.svelte\";\n  import { fly } from \"svelte/transition\";\n  import { crossfade } from \"svelte/transition\"; // importing the Svelte transitions\n  import { flip } from \"svelte/animate\";\n\n\n  let todos = [];\n  let newTodo = \"\";\n  let currentFilter = \"all\";\n  let allChecked = false;\n\n  $: filteredTodos =\n    currentFilter === \"all\"\n      ? todos\n      : currentFilter === \"completed\"\n      ? todos.filter(todo => todo.completed)\n      : todos.filter(todo => !todo.completed);\n\n  onMount(async () => {\n    const res = await fetch(\"http://localhost:3000/api/todos\");\n    const result = await res.json();\n\n    todos = result.todos;\n\n  });\n\n  async function addTodo(event) {\n    if (event.which === 13) {\n      const todo = {\n        title: newTodo,\n        description: \"\",\n        completed: false\n      };\n\n      const res = await fetch(\"http://localhost:3000/api/todos\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(todo)\n      });\n      const result = await res.json();\n      todos.unshift(result.todo);\n      todos = todos;\n      newTodo = \"\";\n    }\n  }\n\n  async function checkAllTodos() {\n\n    const checkCompleted = {\n      checked: event.target.checked\n    }\n\n    todos.forEach(todo => todo.completed = event.target.checked);\n    todos = todos;\n\n    const result = await fetch('http://localhost:3000/api/todos/allCompleted', {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(checkCompleted)\n    });\n\n  }\n\n  function updateFilter(filter) {\n    currentFilter = filter;\n  }\n\n  async function deleteTodo(id) {\n    await fetch(`http://localhost:3000/api/todos/${id}`, { method: \"DELETE\" });\n\n    todos = todos.filter(todo => todo._id != id);\n  }\n\n  async function setCompleted(id) {\n\n    const checkCompleted = {\n      checked: event.target.checked\n    }\n\n    await fetch(`http://localhost:3000/api/todo/${id}/completed`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(checkCompleted)\n    });\n  }\n\n  async function editTodo(todo) {\n\n    todo.editing = true;\n\n    todos = todos;\n\n}\n\nasync function doneEdit(todo) {\n\n  todo.editing = false;\n\n  await fetch(`http://localhost:3000/api/todo/${todo._id}`, {\n        method: \"PUT\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(todo)\n      });\n\n  todos = todos;\n\n}\n\nfunction doneEditKeydown(todo, event) {\n\n  if(event.which === 13){\n    doneEdit(todo);\n  }\n}\n\n</script>\n<!-- if should be better to create a separate file for the styling-->\n<style>\n  .container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    max-width: 80%;\n    text-align: center;\n    margin-top: 20px;\n  }\n\n  .logo {\n    display: block;\n    margin: 20px auto;\n    height: 75px;\n  }\n\n  .todo-input {\n    width: 100%;\n    padding: 10px 18px;\n    font-size: 18px;\n    margin-bottom: 16px;\n  }\n  .todo-item {\n    margin-bottom: 12px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    animation-duration: 0.3s;\n  }\n  .remove-item {\n    cursor: pointer;\n    margin-left: 14px;\n  }\n  .todo-item-left {\n    display: flex;\n    align-items: center;\n  }\n  .todo-item-label {\n    padding: 10px;\n    border: 1px solid white;\n    margin-left: 12px;\n  }\n  .todo-item-edit {\n    font-size: 24px;\n    color: #2c3e50;\n    margin-left: 12px;\n    width: 100%;\n    padding: 10px;\n    border: 1px solid #ccc;\n    font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  }\n  .completed {\n    text-decoration: line-through;\n    color: grey;\n  }\n  .extra-container {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    font-size: 16px;\n    border-top: 1px solid lightgrey;\n    padding-top: 14px;\n    margin-bottom: 14px;\n  }\n  button {\n    font-size: 14px;\n    background-color: white;\n    appearance: none;\n  }\n\n  button:hover {\n    background: lightblue;\n    cursor: pointer;\n  }\n  .active {\n    background: lightblue;\n  }\n\n  .todos {\n    margin-bottom: 20px;\n    margin-right: 20px;\n  }\n</style>\n\n<Navbar />\n\n<div class=\"container\">\n\n  <div class=\"row\">\n\n    <div class=\"col-md-12\">\n\n      <h2>Add a new Todo</h2>\n      <input\n        type=\"text\"\n        class=\"todo-input\"\n        placeholder=\"Type what needs to be done\"\n        bind:value={newTodo}\n        on:keydown={addTodo} />\n\n      <div class=\"extra-container\">\n        <div>\n          <button\n            on:click={() => updateFilter('all')}\n            class:active={currentFilter === 'all'}>\n            All\n          </button>\n          <button\n            on:click={() => updateFilter('pending')}\n            class:active={currentFilter === 'pending'}>\n            Active\n          </button>\n          <button\n            on:click={() => updateFilter('completed')}\n            class:active={currentFilter === 'completed'}>\n            Completed\n          </button>\n        </div>\n\n        <div>\n          <label>\n            <input type=\"checkbox\" bind:checked={allChecked} on:change={($event) => checkAllTodos($event)} />\n            Check All\n          </label>\n        </div>\n\n      </div>\n    </div>\n\n    {#each filteredTodos as todo}\n      <div class=\"todos\" transition:fly=\"{{ y: 25, duration: 1000}}\">\n        <div class=\"card\" style=\"width: 18rem;\">\n          <div class=\"card-body\">\n          {#if !todo.editing}\n            <h4 on:dblclick={() => editTodo(todo)} class=\"card-title\" class:completed={todo.completed}>\n               {todo.title}\n            </h4>\n          {:else}\n          \t<input class=\"todo-item-edit\" type=\"text\" bind:value={todo.title} on:blur={() => doneEdit(todo)} on:keydown={() => doneEditKeydown(todo, event)} autofocus>\n            \n            {/if}\n\n            <p\n              class=\"card-subtitle mb-2 text-muted\"\n              class:completed={todo.completed}>\n              {todo.title}\n            </p>\n            <input\n              type=\"checkbox\"\n              bind:checked={todo.completed}\n              on:change={$event => setCompleted(todo._id, $event)} />\n            Completed\n            <button\n              class=\"btn btn-outline-danger\"\n              on:click={() => deleteTodo(todo._id)}>\n              delete note\n            </button>\n            <!--<a href=\"#\" class=\"card-link\">Another link</a>-->\n          </div>\n        </div>\n\n      </div>\n    {/each}\n\n  </div>\n</div>\n"
  ],
  "names": [],
  "mappings": "AAwHE,wBAAW,CACT,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,CACnB,SAAS,CAAE,GAAG,CACd,UAAU,CAAE,MAAM,CAClB,UAAU,CAAE,IACd,CAQA,yBAAY,CACV,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CAAC,IAAI,CAClB,SAAS,CAAE,IAAI,CACf,aAAa,CAAE,IACjB,CAqBA,6BAAgB,CACd,SAAS,CAAE,IAAI,CACf,KAAK,CAAE,OAAO,CACd,WAAW,CAAE,IAAI,CACjB,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CACtB,WAAW,CAAE,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,UAC3C,CACA,wBAAW,CACT,eAAe,CAAE,YAAY,CAC7B,KAAK,CAAE,IACT,CACA,8BAAiB,CACf,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,aAAa,CAC9B,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,SAAS,CAC/B,WAAW,CAAE,IAAI,CACjB,aAAa,CAAE,IACjB,CACA,oBAAO,CACL,SAAS,CAAE,IAAI,CACf,gBAAgB,CAAE,KAAK,CACvB,UAAU,CAAE,IACd,CAEA,oBAAM,MAAO,CACX,UAAU,CAAE,SAAS,CACrB,MAAM,CAAE,OACV,CACA,qBAAQ,CACN,UAAU,CAAE,SACd,CAEA,oBAAO,CACL,aAAa,CAAE,IAAI,CACnB,YAAY,CAAE,IAChB"
}